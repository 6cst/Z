# -*- coding: utf-8 -*-
"""DECISONxTREES.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UTARYfMzv94tb9yI_HWR5ayUBq9vEE4h
"""

from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score,classification_report,confusion_matrix
import matplotlib.pyplot as plt
import pandas as pd

data=pd.read_csv('/content/iris (1).csv')
data.shape

data.head()

data.tail()

data.isnull().sum().sum()

print(data.duplicated().sum())

data.drop_duplicates(inplace=True)

data.shape

data.target.unique()

X=data.iloc[:,[0,1,2,3]]
y=data[['target']]

X.head()

X_train, X_test, y_train, y_test = train_test_split(X,y, random_state = 10)

X_train.shape

y_train.shape

model = DecisionTreeClassifier()
model.fit(X_train,y_train)

y_predict = model.predict(X_test)
accuracy_score(y_test,y_predict)

model.get_depth()

model = DecisionTreeClassifier(max_depth=3) # max.depth
model.fit(X_train,y_train)
y_predict = model.predict(X_test)
accuracy_score(y_test,y_predict)

model = DecisionTreeClassifier(max_depth=10) # max.depth
model.fit(X_train,y_train)
y_predict = model.predict(X_test)
accuracy_score(y_test,y_predict)

print(classification_report(y_test,y_predict))

confusion_matrix(y_test,y_predict)

from sklearn import tree
from matplotlib import rcParams
rcParams['figure.figsize']=12,12
dt = tree.DecisionTreeClassifier()
dt.fit(X,y)
tree.plot_tree(dt,
               class_names=['Setosa','Versicolor','Virginica'],
               feature_names=['sepal_length','sepal_width','petal_length','petal_width'],
              filled=True,max_depth=6)
plt.show()

from collections import Counter
Counter(data.target)

data.target.value_counts()

# Pie Chart for target distribution
target_counts = data['target'].value_counts()
plt.figure(figsize=(6,6))
plt.pie(target_counts, labels=target_counts.index, autopct='%1.1f%%', startangle=140)
plt.title('Distribution of Iris Species')
plt.show()

"""RANDOMxFOREST!

"""

import numpy as np
import pandas as pd
import seaborn as sns
from sklearn.metrics import classification_report,confusion_matrix,accuracy_score
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
df=pd.read_csv('/content/mtcars.csv')
df.head()

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
df['car_model'] = le.fit_transform(df['car_model'])

df.head()

















